name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'PATCH version update'
        uses: ./
        id: patch
        with:
          version-file: './.github/version.properties'
          version-code-key: 'bundle.version.code'
          version-name-key: 'bundle.version.name'
          version-name-postfix: 'alpha'
          update-type: 'patch'
      - name: 'Get Patched version'
        run: |
          echo "Result"
          echo "Version name: ${{ steps.patch.outputs.new-version-name }}"
          echo "Version code: ${{ steps.patch.outputs.new-version-code }}"

      - name: 'MINOR version update'
        uses: ./
        id: minor
        with:
          version-name: '1.0.0'
          version-code:  0
          update-type: 'minor'
      - name: 'Get Minored version'
        run: |
          echo "Result"
          echo "Version name: ${{ steps.minor.outputs.new-version-name }}"
          echo "Version code: ${{ steps.minor.outputs.new-version-code }}"

      - name: 'MAJOR version update'
        uses: ./
        id: major
        with:
          version-name: '1.0.0'
          version-code:  0
          update-type: 'major'
      - name: 'Get Majored version'
        run: |
          echo "Result"
          echo "Version name: ${{ steps.major.outputs.new-version-name }}"
          echo "Version code: ${{ steps.major.outputs.new-version-code }}"

      - name: 'RELEASE version update'
        uses: ./
        id: release
        with:
          version-name: '1.0.0'
          version-code:  1
          version-name-postfix: 'alpha'
          update-type: 'release'
      - name: 'Get Builded version'
        run: |
          echo "Result"
          echo "Version name: ${{ steps.build.outputs.new-version-name }}"
          echo "Version code: ${{ steps.build.outputs.new-version-code }}"

      - name: 'PRE-RELEASE version update'
        uses: ./
        id: pre_release
        with:
          version-name: '1.0.0'
          version-code:  1
          version-name-postfix: 'alpha'
          update-type: 'pre-release'
      - name: 'Get Builded version'
        run: |
          echo "Result"
          echo "Version name: ${{ steps.build.outputs.new-version-name }}"
          echo "Version code: ${{ steps.build.outputs.new-version-code }}"          
